worker_processes 1;
worker_cpu_affinity 1;

error_log logs/error.log;
pid logs/nginx.pid;

worker_rlimit_nofile 65535;

events {
  # use epoll;
  worker_connections 65535;
}

env SITE_TYPE;
env NOTION_TOKEN;
env NOTION_DATABASE;

http {
  include mime.types;
  default_type application/octet-stream;
  charset utf-8;

  client_max_body_size 16m;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 128K;
  client_body_in_single_buffer on;
  underscores_in_headers on;
  ignore_invalid_headers off;
  
  log_format main '[$time_local] - $remote_addr:$remote_port "$request_method" '
                  '$request_uri $uri $request_time $status $body_bytes_sent '
                  '$http_referer $upstream_addr $upstream_response_time '
                  '$http_user_agent $http_x_forwarded_for $content_length';
  access_log logs/access.log main;

  log_not_found off;
  server_tokens off;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 128k;

  gzip on;
  gzip_min_length 1k;
  gzip_comp_level 6;
  gzip_proxied any;
  gzip_disable msie6;
  gzip_vary on;

  #共享全局变量，在所有worker间共享
  lua_shared_dict shared_data 10m;
  init_by_lua_file site/lua/init.lua;

  lua_package_path "site/lua/?.lua;;";
  lua_package_cpath "site/lua/?.so;;";

  server {
    listen 8080;
    server_name localhost 127.0.0.1;
    resolver 8.8.8.8 114.114.114.114;
    charset utf-8;
    
    set $site_root site;
    set $template_root $site_root/template;
    set $lua_root $site_root/lua;

    location ~ \.(gif|png|jpg|jpeg|webp|svg|ico|woff|woff2|ttf|js|css) {
      root $site_root;
    }

    location = / {
      default_type text/html;
      lua_code_cache on;
      content_by_lua_file $lua_root/index.lua;
    }

    location ^~ /refresh/ {
      default_type text/html;
      lua_code_cache on;
      content_by_lua_file $lua_root/refresh.lua;
    }

    location / {
      return 404;
    }


    error_page 404 /404.html;
    location = /404.html {
      root $template_root;
    }

    error_page 403 500 502 503 504 /error.html;
    location = /error.html {
      root $template_root;
    }
  }
}
